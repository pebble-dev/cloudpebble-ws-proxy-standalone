apiVersion: v1
kind: Service
metadata:
  name: cloudpebble-ws-proxy
spec:
  type: NodePort
  selector:
    app: cloudpebble-ws-proxy
  ports:
  - protocol: TCP
    port: 23453
    targetPort: 8080
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: ws-proxy-cloud-rebble-io
spec:
  secretName: ws-proxy-cloud-rebble-io-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: ws-proxy.cloud.rebble.io
  acme:
    config:
    - dns01:
        provider: cloudflare-dns
      domains:
      - ws-proxy.cloud.rebble.io
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: cloudpebble-ws-proxy-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: cloudpebble-ws-proxy-ip
spec:
  tls:
  - secretName: ws-proxy-cloud-rebble-io-tls
  backend:
    serviceName: cloudpebble-ws-proxy
    servicePort: 23453
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudpebble-ws-proxy-deployment
  labels:
    app: cloudpebble-ws-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudpebble-ws-proxy
  template:
    metadata:
      labels:
        app: cloudpebble-ws-proxy
    spec:
      containers:
      -  name: cloudpebble-ws-proxy
         image: gcr.io/cloudrebble-k8s/cloudpebble-ws-proxy:0.0.2
         command: ["node", "start.js"]
         ports:
         - containerPort: 8080
         livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
         readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
         env:
         - name: PORT
           value: "8080"
         - name: PEBBLE_AUTH_URL
           value: https://auth.rebble.io
